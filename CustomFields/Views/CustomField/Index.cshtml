@using Domain.Enums
@model IEnumerable<Domain.CustomField>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
    <a asp-action="" class="btn btn-default">Sort</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Sort)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FieldName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FieldType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsRequired)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Disabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Sort)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FieldName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FieldType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRequired)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Disabled)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
